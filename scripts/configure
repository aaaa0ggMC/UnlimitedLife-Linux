#!/bin/bash
# cd .. 工作目录就是 ./
# @todo stb能不能成我不知道
# Install build dependencies
if [ -f /etc/arch-release ]; then
    echo "This is Arch Linux."
    sudo pacman --needed -S cmake rapidjson glfw glew glm stb ninja gtest
else
  echo "This is not Arch Linux."
  sudo apt-get install build-essential cmake rapidjson-dev libglfw3-dev libglew-dev libglm-dev libstb-dev ninja-build libgtest-dev
fi
mkdir -p CBuild_CACHE
mkdir -p CBuild
# 获取miniaudio
wget https://raw.githubusercontent.com/mackron/miniaudio/refs/heads/master/miniaudio.h
mv miniaudio.h ./CDep/headers

# @todo IMGUI编译
mkdir -p third_party
cd third_party
git clone https://github.com/ocornut/imgui.git
cd imgui
git branch docking
cp ../../scripts/imgui/CMakeLists.txt .
cp ./backends/imgui_impl_opengl3.cpp .
cp ./backends/imgui_impl_opengl3.h .
cp ./backends/imgui_impl_opengl3_loader.h .
cp ./backends/imgui_impl_glfw.cpp .
cp ./backends/imgui_impl_glfw.h .
cp ../../scripts/imgui/CMakeLists.txt .
mkdir -p abuild
cd abuild
cmake .. -G "Unix Makefiles"
make
cp ./libimgui.so ../../../CBuild/
#copy headers
mkdir -p ../../../CDep/headers/imgui/
cd ..
cp ./backends/imgui_impl_opengl3.h ./backends/imgui_impl_opengl3_loader.h ./backends/imgui_impl_glfw.h ./imconfig.h ./imgui.h ./imgui_internal.h ./imstb_rectpack.h ./imstb_textedit.h ./imstb_truetype.h ../../CDep/headers/imgui 
cd ..
cd ..

# Create a build directory if it doesn't exist
cd CBuild_CACHE

# Run CMake to configure the project
cmake .. -DCMAKE_BUILD_TYPE=Release -G "Ninja" -DCMAKE_INSTALL_PREFIX=/usr